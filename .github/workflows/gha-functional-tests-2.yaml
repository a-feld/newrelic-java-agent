## Matrix strategy test for Functional Tests
name: GHA Migration - strategy.matrix Functional Tests

on:
  # pull_request:
  #   branches: [ main ]
  push:
    branches: [ gha-testing ]

jobs:
  matrix_functional_all_versions:
    runs-on: ubuntu-latest
    strategy:
      ##max-parallel: 1 ## used to force sequential
      fail-fast: false
      matrix:
        java-version: [8, 9, 10, 11, 12, 13, 14, 15]
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

      # Need Java 8 for all tests
      - name: Set up Java 8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 8

      # add jdk8 to environmental variables
      - name: save JAVA_HOME as JDK8 for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk8=$JAVA_HOME" >> $GITHUB_ENV

      # Concurrent install of all Java versions
      - name: Set up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ matrix.java-version }}

      - name: save JAVA_HOME as JDK${{ matrix.java-version }} for later usage
        run: echo "ORG_GRADLE_PROJECT_jdk${{ matrix.java-version }}=$JAVA_HOME" >> $GITHUB_ENV

      # Check $JAVA_HOME
      - name: Check "$JAVA_HOME"
        run: |
          echo "Current $JAVA_HOME = " ${JAVA_HOME}

      ## Custom Cache Test
      - name: Touch a file and save to a cache directory
        run: |
          mkdir test-cache-dir
          touch test-cache-dir/ORG_GRADLE_PROJECT_jdk${{ matrix.java-version }}.txt
          ls -la
          cd test-cache-dir
          ls -la
          cd ../

      - name: Cache test directory
        uses: actions/cache@v2
        env:
          cache-name: cache-test-dir
        with:
          path: test-cache-dir
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.txt') }} ## Explore extensions to cache if no lock file
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Restore the gradle cache
      - name: Restore the gradle caches
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # The docs say to use hashfiles, but gradle itself is smart enough to
          # re-download dependencies if it couldn't resolve them.
          # Because our gradle cache is _so big_, I think a 90% cache is far
          # better than a 0% cache.
          key: ${{ runner.os }}-gradle
          restore-keys: |
            ${{ runner.os }}-gradle


      # GHA run functional tests
      # Run the build.
      - name: Run functional tests against version defined in matrix  
        run: |
          ./gradlew --console=plain --parallel functional_test:test -Ptest${{ matrix.java-version }} --continue --info

  testing_job_dependence: ## Test Only
    needs:  matrix_functional_all_versions
    runs-on: ubuntu-latest
    steps:        
        - name: Cache test directory
          uses: actions/cache@v2
          env:
            cache-name: cache-test-dir
          with:
            path: test-cache-dir
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.txt') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-

        ## List cached items
        - name: List items in testing cached directory
          run: |
            cd test-cache-dir
            ls -la
            cd ../

        # Restore the gradle cache
        - name: Restore the gradle caches
          uses: actions/cache@v2
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            # The docs say to use hashfiles, but gradle itself is smart enough to
            # re-download dependencies if it couldn't resolve them.
            # Because our gradle cache is _so big_, I think a 90% cache is far
            # better than a 0% cache.
            key: ${{ runner.os }}-gradle
            restore-keys: |
              ${{ runner.os }}-gradle

        - name: Check that all the Java versions are installed
          run: |
            pwd
            ls -la 
            whereis java
